<odoo>
    <record id="wup_sol_update" model="base.automation">
            <field name="name">=> Update SOL price_unit and notes from WUP</field>
            <field name="model_id" ref="sale.model_sale_order_line"/>
            <field name="state">code</field>
            <field name="code">
if (record.wup_line_ids.ids):
  if (record.wup_price_unit != record.price_unit) or (record.wup_cost_amount != record.purchase_price):
    record.write({'price_unit':record.wup_price_unit, 'purchase_price':record.wup_cost_amount, 'wup_update':False})
  if not (record.wup_line_note_id.id) and (record.wup_template_id.id) and (record.wup_template_id.description):
    # Create a line note from wup template description:
    new_note = env['sale.order.line'].create({'sequence':record.sequence, 'name':record.wup_template_id.description, 'display_type':'line_note', 'order_id':record.order_id.id})
            </field>
            <field name="trigger">on_write</field>
            <field name="trigger_field_ids" eval="[(6,0, [ref('sale.field_sale_order_line__product_uom_qty'),
                                                    ref('sale_wup.field_sale_order_line__wup_price_unit'),
                                                    ref('sale_wup.field_sale_order_line__wup_template_id')])]"/>
            <field name="filter_pre_domain"></field>
            <field name="filter_domain"></field>
            <field name="active" eval="True"/>
        </record>

        <record id="so_wup_tasks" model="base.automation">
            <field name="name">=>SO WUP Tasks</field>
            <field name="model_id" ref="sale.model_sale_order"/>
            <field name="state">code</field>
            <field name="code">
# Task creation of service products in wup.line:
if (record.state in ['sale']):
  wuplines = env['wup.line'].search([('sale_id','=',record.id),('product_id.service_tracking','in',['task_in_project']),('task_id','=',False)])
  if (wuplines.ids) and not (record.project_id.id):
    newproject = env['project.project'].create({'name':record.name, 'partner_id':record.partner_id.id,
      'sale_order_id':record.id, 'allow_timesheets':True, 'allow_billable':True})
    record.write({'project_id':newproject.id, 'visible_project':True, 'analytic_account_id':newproject.analytic_account_id.id})
  for li in wuplines:
    # sale_line_id in task not working for 'consu' and 'product':
    sale_line = False
    if li.sale_line_id.product_id.type in ['service']: sale_line = li.sale_line_id.id

    name = li.sale_line_id.name + ".- " + li.name
    newtask = env['project.task'].create({'name':name, 'sale_line_id':sale_line ,'sale_order_id':record.id,
      'project_id': record.project_id.id, 'planned_hours':li.product_uom_qty, 'wup_line_id':li.id})
    li['task_id'] = newtask.id
            </field>
            <field name="trigger">on_create_or_write</field>
            <field name="trigger_field_ids" eval="[(6,0, [ref('sale.field_sale_order__state')])]"/>
            <field name="filter_pre_domain"></field>
            <field name="filter_domain"></field>
            <field name="active" eval="True"/>
        </record>


</odoo>
